(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-5d8a04ea'], {
  '0d2f': function (t, e, o) {
    o.r(e); o('4de4'); const n = o('7a23'); const c = Object(n.F)('data-v-76a70c6f'); Object(n.s)('data-v-76a70c6f'); const l = { class: 'row' }; const r = Object(n.g)('h3', null, 'Список книг', -1); const a = Object(n.g)('p', { class: 'flow-text row s6 subtitle' }, 'Здесь представлен список книг в вашей библиотеке. Вы можете их отсортировать и отфильтровать по желанию', -1); const i = { class: 'input-field col s6' }; const u = Object(n.g)('option', { value: '', disabled: '', selected: '' }, 'Выберите опцию', -1); const s = Object(n.g)('option', { value: 'author' }, 'По автору', -1); const b = Object(n.g)('option', { value: 'title' }, 'По названию', -1); const j = { label: 'По жанру' }; const d = Object(n.g)('label', null, 'Сортировать список', -1); const O = { class: 'input-field col s6' }; const f = Object(n.g)('option', { value: '', disabled: '', selected: '' }, 'Выберите опцию', -1); const p = { label: 'По Автору' }; const h = { label: 'По Названию' }; const g = { label: 'По жанру' }; const k = Object(n.g)('label', null, 'Фильтровать список', -1); const v = { class: 'highlight col s12 responsive-table section' }; const y = Object(n.g)('thead', null, [Object(n.g)('tr', null, [Object(n.g)('th', null, 'Автор'), Object(n.g)('th', null, 'Заголовок'), Object(n.g)('th', null, 'Жанр'), Object(n.g)('th', null, 'Удалить')])], -1); const S = { class: 'left-align flow-text' }; Object(n.q)(); const B = c(((t, e, o, c, B, m) => { const w = Object(n.w)('Book'); return Object(n.p)(), Object(n.d)('div', l, [r, a, Object(n.g)('div', i, [Object(n.D)(Object(n.g)('select', { ref: 'sort', 'onUpdate:modelValue': e[1] || (e[1] = function (t) { return B.sorted = t; }), onChange: e[2] || (e[2] = function (t) { return m.saveSortState(B.sorted); }) }, [u, s, b, Object(n.g)('optgroup', j, [(Object(n.p)(!0), Object(n.d)(n.a, null, Object(n.v)(m.allGenres, ((t) => (Object(n.p)(), Object(n.d)('option', { key: t.id, value: t }, Object(n.y)(t), 9, ['value'])))), 128))])], 544), [[n.A, B.sorted]]), d, Object(n.g)('button', { type: 'button', class: 'btn', onClick: e[3] || (e[3] = function () { return m.clearSortState && m.clearSortState.apply(m, arguments); }) }, 'Сбросить')]), Object(n.g)('div', O, [Object(n.D)(Object(n.g)('select', { ref: 'filter', 'onUpdate:modelValue': e[4] || (e[4] = function (t) { return B.filter = t; }), onChange: e[5] || (e[5] = function (t) { return m.saveFilterState(B.filter); }) }, [f, Object(n.g)('optgroup', p, [(Object(n.p)(!0), Object(n.d)(n.a, null, Object(n.v)(m.totalAuthors, ((t) => (Object(n.p)(), Object(n.d)('option', { key: t.id, value: t }, Object(n.y)(t), 9, ['value'])))), 128))]), Object(n.g)('optgroup', h, [(Object(n.p)(!0), Object(n.d)(n.a, null, Object(n.v)(m.totalTitles, ((t) => (Object(n.p)(), Object(n.d)('option', { key: t.id, value: t }, Object(n.y)(t), 9, ['value'])))), 128))]), Object(n.g)('optgroup', g, [(Object(n.p)(!0), Object(n.d)(n.a, null, Object(n.v)(m.allGenres, ((t) => (Object(n.p)(), Object(n.d)('option', { key: t.id, value: t }, Object(n.y)(t), 9, ['value'])))), 128))])], 544), [[n.A, B.filter]]), k, Object(n.g)('button', { type: 'button', class: 'btn', onClick: e[6] || (e[6] = function () { return m.clearFilterState && m.clearFilterState.apply(m, arguments); }) }, 'Сбросить фильтр')]), Object(n.g)('table', v, [y, Object(n.g)('tbody', null, [(Object(n.p)(!0), Object(n.d)(n.a, null, Object(n.v)(t.getSortedBooks, ((t) => (Object(n.p)(), Object(n.d)(w, { book: t, key: t.id }, null, 8, ['book'])))), 128))]), Object(n.g)('p', S, ` Всего авторов: ${Object(n.y)(m.filteredAuthors)}, произведений: ${Object(n.y)(t.getSortedBooks.length)}`, 1)])]); })); const m = (o('99af'), o('a630'), o('d81d'), o('fb6a'), o('d3b7'), o('6062'), o('3ca3'), o('ddb0'), o('2909')); const w = o('5530'); const A = o('4d5c'); const F = o.n(A); const $ = o('5502'); const q = (o('a15b'), Object(n.F)('data-v-2da380d7')); const C = q(((t, e, o, c, l, r) => (Object(n.p)(), Object(n.d)('tr', null, [Object(n.g)('td', { onClick: e[1] || (e[1] = Object(n.E)((function () { return r.openPage && r.openPage.apply(r, arguments); }), ['self'])), class: 'hoverable' }, Object(n.y)(o.book.author), 1), Object(n.g)('td', null, Object(n.y)(o.book.title), 1), Object(n.g)('td', null, Object(n.y)(o.book.genres.join(', ')), 1), Object(n.g)('td', null, [Object(n.g)('button', { onClick: e[2] || (e[2] = Object(n.E)((function () { return r.delBook && r.delBook.apply(r, arguments); }), ['self'])), type: 'button', class: 'waves-effect waves-light btn-small' }, '×')])])))); const _ = { props: ['book', 'filteredBooks'], methods: Object(w.a)(Object(w.a)({}, Object($.b)(['deleteBook'])), {}, { openPage() { this.$router.push({ name: 'editBook', params: { id: this.book.id } }); }, delBook() { this.deleteBook(this.book.id); } }) }; o('31de'); _.render = C, _.__scopeId = 'data-v-2da380d7'; const G = _; const P = {
      data() { return { sorted: null, filter: null }; },
      components: { Book: G },
      methods: Object(w.a)(Object(w.a)({}, Object($.b)(['setBookFilter', 'setBookSort'])), {}, {
        saveFilterState(t) { this.$router.push({ name: 'booksList', query: Object(w.a)(Object(w.a)({}, this.$route.query), {}, { filter: t }) }), console.log('onChange '.concat(t)); }, saveSortState(t) { this.$router.push({ name: 'booksList', query: Object(w.a)(Object(w.a)({}, this.$route.query), {}, { sort: t }) }), console.log('onChange '.concat(t)); }, clearFilterState() { this.saveFilterState(null), this.filter = null, this.setBookFilter(this.filter); }, clearSortState() { this.saveSortState(null), this.sorted = null, this.setBookSort(this.sorted); },
      }),
      computed: Object(w.a)(Object(w.a)({}, Object($.c)(['getAllBooks', 'getSortedBooks'])), {}, {
        totalAuthors() { return Array.from(new Set(this.getAllBooks.map(((t) => t.author)))); }, totalTitles() { return this.getAllBooks.map(((t) => t.title)); }, allGenres() { let t; const e = this.getAllBooks.slice(0).map(((t) => Array.from(t.genres))); return Array.from(new Set((t = []).concat.apply(t, Object(m.a)(e)))); }, filteredAuthors() { return Array.from(new Set(this.getSortedBooks.map(((t) => t.author)))).length; },
      }),
      mounted() { F.a.FormSelect.init(this.$refs.sort, {}), F.a.FormSelect.init(this.$refs.filter, {}), this.$route.query.filter && (this.filter = this.$route.query.filter), this.$route.query.sort && (this.sorted = this.$route.query.sort); },
      watch: { filter(t) { this.setBookFilter(t); }, sorted(t) { this.setBookSort(t); } },
    }; o('be78'); P.render = B, P.__scopeId = 'data-v-76a70c6f'; e.default = P;
  },
  '31de': function (t, e, o) {
    o('c269');
  },
  '54ab': function (t, e, o) {},
  a15b(t, e, o) {
    const n = o('23e7'); const c = o('44ad'); const l = o('fc6a'); const r = o('a640'); const a = [].join; const i = c != Object; const u = r('join', ','); n({ target: 'Array', proto: !0, forced: i || !u }, { join(t) { return a.call(l(this), void 0 === t ? ',' : t); } });
  },
  be78(t, e, o) {
    o('54ab');
  },
  c269(t, e, o) {},
}]);
// # sourceMappingURL=chunk-5d8a04ea.857c6ed0.js.map
